map $uri $namespace {
    ~*/topics/[0-9-]+\.(?<datasetname>[a-z0-9-]+)\..+$  $datasetname;
    default      'unmatched';
}

upstream auth_backend {
    keepalive 60;
    keepalive_requests 1000;

    server host.docker.internal:8080;
}

upstream rest_backend {
    keepalive 60;
    keepalive_requests 1000;

    server host.docker.internal:8080;
}
server {
    #listen 443 ssl http2;
    listen 80;
    
    #vhost_traffic_status_filter_by_set_key $host $namespace;
    # send all requests to the `/validate` endpoint for authorization

    location = /auth {
        internal;
        # https://docs.docker.com/docker-for-mac/networking/
        proxy_pass http://auth_backend;
        # proxy_pass http://ra:8080;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass_request_body     off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Original-Method $request_method;
        proxy_set_header X-Service "kafka-rest";
      }

      location / {
         auth_request /auth;
        #auth_basic "Restricted Area";
        #auth_basic_user_file /etc/nginx/kafka_htpasswd;
        return 200 'Auth';
       #proxy_pass http://rest_backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
      }
}
